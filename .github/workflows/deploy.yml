# .github/workflows/deployment.yml
name: CI/CD Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./backend/package-lock.json"

      - name: Install Dependencies
        working-directory: ./backend
        run: npm ci

      # - name: Run Tests
      #   working-directory: ./backend
      #   run: npm test

      - name: Build
        working-directory: ./backend
        run: npm run build

      - name: Deploy Backend to Vercel
        working-directory: ./backend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_BACKEND_PROJECT_ID }}
        run: npx vercel --token ${VERCEL_TOKEN} --yes --prod

  build-and-deploy-frontend:
    needs: build-and-deploy-backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install Dependencies
        working-directory: ./frontend
        run: npm ci

      # - name: Run Tests
      #   working-directory: ./frontend
      #   run: npm test

      - name: Build
        working-directory: ./frontend
        run: npm run build

      - name: Deploy Frontend to Vercel
        working-directory: ./frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}
        run: npx vercel --token ${VERCEL_TOKEN} --yes --prod
